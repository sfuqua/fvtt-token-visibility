name: Publish

on:
    push:
        branches:
            - main
        paths:
            - module.json
    workflow_dispatch: {}

jobs:
    build:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2

            - name: Setup Node.js environment
              uses: actions/setup-node@v2
              with:
                  node-version: "12"

            - name: npm ci
              run: npm ci

            - name: Lint, build, test
              run: npm run lint && npm run build && npm test

              # Use jq to read the "version" attribute of module.json and store it
              # in an output called new_version for later steps.
            - name: Get latest manifest version
              id: get_version
              run: |
                  echo "::set-output name=new_version::$(jq -r '.version' module.json)"

            - name: Delete download URL from manifest and copy to output directory
              run: |
                  jq 'del(.download)' module.json > stripped.json
                  mv stripped.json ./module/module.json

            - name: Zip the module
              run: zip -r ./module.zip ./module

            - name: Create release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ steps.get_version.outputs.new_version }}
                  release_name: Release v${{ steps.get_version.outputs.new_version }}
                  draft: false
                  prerelease: true

            - name: Upload module zip
              id: upload_release
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./module.zip
                  asset_name: fvtt-token-visibility-module.zip
                  asset_content_type: application/zip

            - name: Update download URL in main
              run: |
                  jq '.download="${{ steps.upload_release.outputs.browser_download_url }}"' module.json > updated.json
                  mv updated.json module.json
                  npx prettier --write "module.json"
                  git config --global user.name "${{ github.actor }}"
                  git config --global user.email "${{ github.actor }}@users.noreply.github.com"
                  git add module.json
                  git commit -m "Updating manifest with latest release"
                  git push origin main
